{"version":3,"sources":["services/http.js","services/movieServicePlus.js","common/pagination.jsx","common/listGroups.jsx","common/like.jsx","common/tableHeader.jsx","common/tableBody.jsx","common/movieTable.jsx","components/addMovie.jsx","services/genreServicePlus.js","common/movie.jsx","utils/pagination.js","components/navbar.jsx","components/customers.jsx","components/rentals.jsx","components/input.jsx","components/select.jsx","common/back.jsx","common/form.jsx","components/movieForm.jsx","common/details.jsx","components/noFound.jsx","services/authServicePlus.js","components/loginForm.jsx","components/logout.jsx","services/userService.js","components/register.jsx","components/ProtectedRoutes.jsx","components/home.jsx","App.js","serviceWorker.js","index.js"],"names":["axios","interceptors","response","use","error","console","log","toast","Promise","get","post","put","delete","getNewMovie","id","a","http","config","apiEndpoint","Error","saveMovie","movie","alter","deleteNewMovie","Pagination","list","Math","ceil","this","props","listLength","listNum","page","_","range","style","margin","aria-label","className","map","num","onClick","pageHandler","key","currentPage","href","Component","Groups","genre","genreHandler","active","name","Like","likes","icon","empty","filled","TableHeader","head","sorting","movies","random","item","path","label","TableBody","renderList","arr","content","paginatedList","_id","to","MovieTable","filterMovies","deleteMovie","heart","header","liked","bind","border","borderRadius","backgroundColor","color","NewMovie","newGenres","Movies","state","count","currentGenre","index","indexOf","setState","sortTitle","arr1","orderBy","JSON","stringify","getPage","orignalMovies","filter","m","getGenre","filterGenre","x","slice","pagination","length","user","numbering","genres","data","Navbar","activeStyle","Fragment","Customer","Rental","Input","value","onChange","htmlFor","type","placeholder","Select","option","Back","link","disabled","history","submit","marginTop","Form","validate","result","Joi","schema","abortEarly","details","i","message","validateProperty","obj","handleSubmit","e","preventDefault","doSubmit","handleLogin","errorMessage","currentTarget","input","select","button","MovieForm","title","genreId","numberInStock","dailyRentalRate","any","string","required","number","integer","min","less","push","updateMovieData","window","location","MovieDetails","match","params","NoFound","email","username","password","jwt","localStorage","setItem","getItem","defaults","headers","common","login","logout","removeItem","getUser","jwtDecode","ex","loginWithJwt","LoginForm","auth","from","pathname","onSubmit","Logout","register","Register","userService","ProtectedRoutes","component","render","rest","Home","exact","App","Boolean","hostname","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a8815dcd.chunk.js","sourcesContent":["/** @format */\n\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response && error.response >= 400 && error.response < 500;\n  if (!expectedError) {\n    console.log(\"Logging the error\", error);\n    toast.error(\"An unexpected error occurred.\");\n  }\n  return Promise.response(error);\n});\n\nexport function setJwt(key) {\n  axios.defaults.headers.common[\"x-auth-token\"] = key;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n};\n","/** @format */\n\nimport config from \"../config.json\";\nimport http from \"./http\";\n\nexport function getNewMovies() {\n  return http.get(`${config.apiEndpoint}/movies`);\n}\n\nexport async function getNewMovie(id) {\n  try {\n    if (id) return await http.get(`${config.apiEndpoint}/movies/${id}`);\n    else throw Error;\n  } catch (ex) {\n    return {};\n  }\n  // if (id) return http.get(`${config.apiEndpoint}/movies/${id}`);\n  // return {};\n}\n\nexport function saveMovie(movie) {\n  let alter = { ...movie };\n  delete alter.id;\n  if (movie.id) {\n    return http.put(`${config.apiEndpoint}/movies/${movie.id}`, alter);\n  } else {\n    return http.post(`${config.apiEndpoint}/movies`, alter);\n  }\n}\n\nexport function deleteNewMovie(id) {\n  return http.delete(`${config.apiEndpoint}/movies/${id}`);\n}\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nclass Pagination extends Component {\n  render() {\n    let list = Math.ceil(this.props.listLength / this.props.listNum);\n    let page = _.range(1, list + 1);\n    return (\n      <nav style={{ margin: \"2em\" }} aria-label=\"Page navigation example\">\n        <ul className=\"pagination\">\n          {page.map((num) => {\n            return (\n              <li\n                onClick={() => this.props.pageHandler(num)}\n                key={num}\n                className={\n                  this.props.currentPage === num\n                    ? \"page-item active\"\n                    : \"page-item \"\n                }\n              >\n                <a href=\"#/\"  className=\"page-link\">{num}</a>\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Pagination;\n","import React from \"react\";\nconst Groups = (props) => {\n  let { genre, genreHandler, active } = props;\n  return (\n    <ul className=\"list-group click\">\n      {genre.map((movie) => {\n        return (\n          <li\n            key={movie.name}\n            onClick={() => genreHandler(movie)}\n            className={\n              active === movie ? \"list-group-item active\" : \"list-group-item\"\n            }\n          >\n            {movie.name}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Groups;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart as empty } from \"@fortawesome/free-regular-svg-icons\";\nimport { faHeart as filled } from \"@fortawesome/free-solid-svg-icons\";\nclass Like extends Component {\n  render() {\n    if (this.props.likes)\n      return (\n        <FontAwesomeIcon\n          className=\"click\"\n          onClick={this.props.onClick}\n          icon={empty}\n        />\n      );\n    else\n      return (\n        <FontAwesomeIcon\n          className=\"click\"\n          onClick={this.props.onClick}\n          icon={filled}\n        />\n      );\n  }\n}\n\nexport default Like;\n","import React from \"react\";\nconst TableHeader = (props) => {\n  const { head, sorting, movies } = props;\n  return (\n    <thead>\n      <tr key={Math.random()}>\n        {head.map((item) => {\n          return (\n            <th key={item.path} onClick={() => sorting(movies, item.path)}>\n              {item.label}\n            </th>\n          );\n        })}\n      </tr>\n    </thead>\n  );\n};\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nclass TableBody extends Component {\n  render() {\n    const { paginatedList, head } = this.props;\n    return (\n      <tbody>\n        {paginatedList.map((arr) => (\n          <tr key={arr._id}>\n            {head.map((head) => {\n              if (head.path === \"title\") {\n                return (\n                  <td key={head.path || head.key}>\n                    <Link to={`/movies/${arr._id}`}>\n                      {this.renderList(arr, head)}\n                    </Link>\n                  </td>\n                );\n              } else {\n                return (\n                  <td key={head.path || head.key}>\n                    {this.renderList(arr, head)}\n                  </td>\n                );\n              }\n            })}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n  renderList = (arr, head) => {\n    if (head.label) return _.get(arr, head.path);\n    else return head.content(arr);\n  };\n}\n\nexport default TableBody;\n","import React, { Component } from \"react\";\nimport Like from \"./like\";\nimport \"../utils/movie.css\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nclass MovieTable extends Component {\n  render() {\n    const {\n      filterMovies,\n      paginatedList,\n      deleteMovie,\n      sorting,\n      heart,\n    } = this.props;\n    let header = [\n      { path: \"title\", label: \"Title\" },\n      { path: \"genre.name\", label: \"Name\" },\n      { path: \"numberInStock\", label: \"Stock\" },\n      { path: \"dailyRentalRate\", label: \"Rate\" },\n      {\n        key: \"Like\",\n        content: (arr) => {\n          return <Like likes={arr.liked} onClick={() => heart(arr)} />;\n        },\n      },\n      {\n        key: \"delete\",\n        content: (arr) => {\n          return (\n            <button\n              onClick={deleteMovie.bind(this, arr._id)}\n              className=\"btn click\"\n              style={{\n                border: \"transparent\",\n                borderRadius: \"5px\",\n                backgroundColor: \"red\",\n                color: \"white\",\n              }}\n            >\n              Delete\n            </button>\n          );\n        },\n      },\n    ];\n    return (\n      <table>\n        <TableHeader head={header} sorting={sorting} movies={filterMovies} />\n        <TableBody paginatedList={paginatedList} head={header} />\n      </table>\n    );\n  }\n}\n\nexport default MovieTable;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../utils/form.css\";\n\nclass NewMovie extends Component {\n  render() {\n    return (\n      <div className=\"add\">\n        <Link to=\"/movies/add\">\n          <p className=\"btn btn-primary btn-lg btn-block\">New Movie</p>\n        </Link>\n      </div>\n    );\n  }\n}\nexport default NewMovie;\n","import config from \"../config.json\";\nimport http from \"./http\";\n\nexport default function newGenres() {\n  return http.get(`${config.apiEndpoint}/genres`);\n}\n","/** @format */\n\nimport React, { Component } from \"react\";\nimport { pagination } from \"../utils/pagination\";\nimport { toast } from \"react-toastify\";\nimport { getNewMovies, deleteNewMovie } from \"../services/movieServicePlus\";\nimport Pagination from \"./pagination\";\nimport Groups from \"./listGroups\";\nimport MovieTable from \"./movieTable\";\nimport NewMovie from \"../components/addMovie\";\nimport newGenres from \"../services/genreServicePlus\";\nimport _ from \"lodash\";\nimport \"../utils/movie.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass Movies extends Component {\n  state = {\n    count: [],\n    genre: [],\n    listNum: 4,\n    currentPage: 1,\n    currentGenre: null,\n  };\n  render() {\n    let filterGenre =\n      this.state.currentGenre && this.state.currentGenre._id\n        ? this.state.count.filter(\n            (movies) => movies.genre.name === this.state.currentGenre.name,\n          )\n        : this.state.count;\n    let movies = pagination(\n      this.state.listNum,\n      filterGenre.length,\n      this.state.currentPage,\n      filterGenre,\n    );\n    let { user } = this.props;\n    return (\n      <div className='wrapper'>\n        <span className='message'>Movies: {this.numbering(filterGenre)}</span>\n        <span className='group'>\n          <Groups\n            genre={this.state.genre}\n            genreHandler={this.getGenre}\n            active={this.state.currentGenre}\n          />\n          {user && <NewMovie />}\n        </span>\n        <MovieTable\n          filterMovies={filterGenre}\n          genres={this.state.genre}\n          paginatedList={movies}\n          deleteMovie={this.delete}\n          sorting={this.sortTitle}\n          heart={this.liked}\n        />\n        <span className='pagi'>\n          <Pagination\n            listNum={this.state.listNum}\n            listLength={filterGenre.length}\n            currentPage={this.state.currentPage}\n            pageHandler={this.getPage}\n          />\n        </span>\n      </div>\n    );\n  }\n  async componentDidMount() {\n    let { data: genres } = await newGenres();\n    let { data: movies } = await getNewMovies();\n    this.setState({\n      count: movies,\n      genre: [{ name: \"All\" }, ...genres],\n    });\n  }\n  liked = (arr) => {\n    let movies = [...this.state.count];\n    let index = movies.indexOf(arr);\n    movies[index].liked = !arr.liked;\n    this.setState({ count: movies });\n  };\n  sortTitle = (arr, path) => {\n    let arr1 = _.orderBy(arr, [path], [\"asc\"]);\n    if (JSON.stringify(arr1) !== JSON.stringify(arr))\n      this.setState({ count: arr1 });\n    else {\n      arr1 = _.orderBy(arr, [path], [\"desc\"]);\n      this.setState({ count: arr1 });\n    }\n  };\n\n  getPage = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  numbering(genre) {\n    let num = genre.length;\n    num = genre.length === 0 ? \"No \" : num;\n    return num;\n  }\n\n  delete = async (id) => {\n    let { count: orignalMovies } = this.state;\n    const movies = orignalMovies.filter((m) => m._id !== id);\n    this.setState({ count: movies });\n    try {\n      await deleteNewMovie(id);\n    } catch (ex) {\n      if (ex.response && ex.response === 404)\n        toast.error(\"This movie has already deleted\");\n      this.setState({ count: orignalMovies });\n    }\n  };\n\n  getGenre = (movie) => {\n    this.setState({ currentGenre: movie, currentPage: 1 });\n  };\n}\n\nexport default Movies;\n","export function pagination(listNum, listLength, page, movies) {\n  let x = (page - 1) * 4;\n  let arr = movies.slice(x, x + 4);\n  return arr;\n}\n","/** @format */\n\nimport React, { Component } from \"react\";\nimport \"../utils/movie.css\";\nimport { NavLink } from \"react-router-dom\";\nclass Navbar extends Component {\n  render() {\n    let { user } = this.props;\n    return (\n      <div className='navbar'>\n        <span className='title'>\n          <p className='logo'> Vidly</p>\n          <p>\n            <NavLink\n              to='/movies'\n              className='inactive'\n              activeStyle={{ color: \"Black\" }}\n            >\n              Movies\n            </NavLink>\n          </p>\n          <p>\n            <NavLink\n              to='/customers'\n              className='inactive'\n              activeStyle={{ color: \"Black\" }}\n            >\n              Customers\n            </NavLink>\n          </p>\n          <p>\n            <NavLink\n              to='/rentals'\n              className='inactive'\n              activeStyle={{ color: \"Black\" }}\n            >\n              Rentals\n            </NavLink>\n          </p>\n          {user && (\n            <React.Fragment>\n              <p>\n                <NavLink\n                  to='/'\n                  className='inactive'\n                  activeStyle={{ color: \"Black\" }}\n                >\n                  {user.name}\n                </NavLink>\n              </p>\n              <p>\n                <NavLink\n                  to='/logout'\n                  className='inactive'\n                  activeStyle={{ color: \"Black\" }}\n                >\n                  logout\n                </NavLink>\n              </p>\n            </React.Fragment>\n          )}\n          {!user && (\n            <React.Fragment>\n              <p>\n                <NavLink\n                  to='/login'\n                  className='inactive'\n                  activeStyle={{ color: \"Black\" }}\n                >\n                  login\n                </NavLink>\n              </p>\n              <p>\n                <NavLink\n                  to='/register'\n                  className='inactive'\n                  activeStyle={{ color: \"Black\" }}\n                >\n                  Register\n                </NavLink>\n              </p>\n            </React.Fragment>\n          )}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n\nclass Customer extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Customer</h1>\n      </div>\n    );\n  }\n}\n\nexport default Customer;\n","import React, { Component } from \"react\";\n\nclass Rental extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Rental</h1>\n      </div>\n    );\n  }\n}\n\nexport default Rental;\n","import React from \"react\";\n\nconst Input = ({ name, label, value, onChange, error }) => {\n  if (error == null) error = {};\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={\"text\"}\n        className=\"form-control\"\n        id={name}\n        placeholder={label}\n        value={value}\n        onChange={onChange}\n      />\n      {error[name] && <div className=\"alert alert-danger\">{error[name]}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Select = ({ name, label, value, onChange, error, option }) => {\n  if (error == null) error = {};\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select\n        className=\"form-control\"\n        id={name}\n        value={value}\n        onChange={onChange}\n        placeholder={label}\n      >\n        {option.map((genre) => {\n          return (\n            <option key={genre[\"_id\"]} value={genre[\"_id\"]}>\n              {genre[\"name\"]}\n            </option>\n          );\n        })}\n      </select>\n      {error[name] && <div className=\"alert alert-danger\">{error[name]}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\nconst Back = ({ link, label, history, disabled, submit }) => {\n\n  return (\n    <div>\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary\"\n        style={{ marginTop: \"1em\" }}\n        onClick={submit}\n        disabled={disabled}\n      >\n        {label}\n      </button>\n    </div>\n  );\n};\n\nexport default Back;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"../components/input\";\nimport Select from \"../components/select\";\nimport Back from \"./back\";\nclass Form extends Component {\n  state = {\n    data: {},\n    error: {},\n  };\n  validate = () => {\n    let result = Joi.validate(this.state.data, this.schema, {\n      abortEarly: false,\n    });\n    if (!result.error) return null;\n    let error = { ...this.state.error };\n    for (let i of result.error.details) {\n      error[i.path[0]] = i.message;\n    }\n\n    return error;\n  };\n\n  validateProperty = ({ id, value }) => {\n    let obj = { [id]: value };\n    let schema = { [id]: this.schema[id] };\n    let result = Joi.validate(obj, schema);\n    if (!result.error) return null;\n    else return result.error.details[0].message;\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    let error = this.validate();\n    this.setState({ error });\n    if (error) return;\n    this.doSubmit();\n  };\n  handleLogin = (e) => {\n    let error = { ...this.state.error };\n    let errorMessage = this.validateProperty(e.currentTarget);\n    if (errorMessage) error[e.currentTarget.id] = errorMessage;\n    else delete error[e.currentTarget.id];\n\n    let data = { ...this.state.data };\n    data[e.currentTarget.id] = e.currentTarget.value;\n    this.setState({ data, error });\n  };\n\n  input = (name, label, value, error) => {\n    return (\n      <Input\n        name={name}\n        label={label}\n        value={value}\n        error={error}\n        onChange={this.handleLogin}\n      />\n    );\n  };\n  select = (name, label, value, error, option) => {\n    return (\n      <Select\n        name={name}\n        label={label}\n        value={value}\n        error={error}\n        option={option}\n        onChange={this.handleLogin}\n      />\n    );\n  };\n  button = (link, label, history) => {\n    return (\n      <Back\n        submit={this.handleSubmit}\n        link={link}\n        label={label}\n        history={history}\n        disabled={this.validate()}\n      />\n    );\n  };\n}\n\nexport default Form;\n","/** @format */\n\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"../common/form\";\nimport newGenres from \"../services/genreServicePlus\";\nimport { getNewMovie, saveMovie } from \"../services/movieServicePlus\";\nimport \"../utils/form.css\";\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      id: null,\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\",\n    },\n    error: {},\n    genres: [],\n  };\n\n  schema = {\n    id: Joi.any(),\n    title: Joi.string().required().label(\"Title\"),\n    genreId: Joi.string().required().label(\"Genre\"),\n    numberInStock: Joi.number()\n      .integer()\n      .min(0)\n      .required()\n      .label(\"Number In Stock\"),\n    dailyRentalRate: Joi.number().min(0).less(11).required().label(\"Rate\"),\n  };\n  render() {\n    const { data, error, genres } = this.state;\n    const { history } = this.props;\n    return (\n      <div className='container'>\n        <h1 className='formStyle'>Movie Form</h1>\n        <form>\n          {this.input(\"title\", \"Title\", data.title, error)}\n          {this.select(\"genreId\", \"Genre\", data.genreId, error, genres)}\n          {this.input(\n            \"numberInStock\",\n            \"Number In Stock\",\n            data.numberInStock,\n            error,\n          )}\n          {this.input(\"dailyRentalRate\", \"Rate\", data.dailyRentalRate, error)}\n          {this.button(\"/movies\", \"Save\", history)}\n        </form>\n      </div>\n    );\n  }\n\n  async componentDidMount() {\n    let { data: genres } = await newGenres();\n    this.setState({ genres });\n    const { id } = this.props;\n\n    if (id === \"add\") return null;\n\n    let { data: movie } = await getNewMovie(id);\n    console.log(movie);\n    if (!movie) {\n      window.location = \"/no-found\";\n    }\n    this.setState({\n      data: this.updateMovieData(movie),\n    });\n  }\n\n  doSubmit = async () => {\n    await saveMovie(this.state.data);\n    console.log(\"Submitted\");\n    this.props.history.push(\"/movies\");\n  };\n\n  updateMovieData = (movie) => {\n    return {\n      id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  };\n}\n\nexport default MovieForm;\n","/** @format */\n\nimport React, { Component } from \"react\";\nimport MovieForm from \"../components/movieForm\";\nclass MovieDetails extends Component {\n  render() {\n    const { match, history } = this.props;\n    let id = match.params.id;\n    return (\n      <div>\n        <MovieForm id={id} history={history} />\n      </div>\n    );\n  }\n}\n\nexport default MovieDetails;\n","import React, { Component } from 'react';\nclass NoFound extends Component {\n    render() { \n        return (\n            <div>\n                <h1>NO Found</h1>\n            </div> \n        );\n    }\n}\n \nexport default NoFound;","/** @format */\n\nimport http, { setJwt } from \"./http\";\nimport { apiEndpoint } from \"../config.json\";\nimport jwtDecode from \"jwt-decode\";\n\nsetJwt(localStorage.getItem(\"token\"));\n\nexport async function login(user) {\n  const { data: jwt } = await http.post(`${apiEndpoint}/auth`, {\n    email: user.username,\n    password: user.password,\n  });\n  localStorage.setItem(\"token\", jwt);\n}\nexport function logout() {\n  localStorage.removeItem(\"token\");\n}\nexport function getUser() {\n  try {\n    const jwt = localStorage.getItem(\"token\");\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\nexport function loginWithJwt(response) {\n  localStorage.setItem(\"token\", response);\n}\n\nexport default {\n  login,\n  logout,\n  getUser,\n  loginWithJwt,\n};\n","/** @format */\n\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"../common/form\";\nimport auth from \"../services/authServicePlus\";\nimport { Redirect } from \"react-router\";\nimport \"../utils/form.css\";\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    error: {},\n  };\n  schema = {\n    username: Joi.string().required().label(\"Username\"),\n    password: Joi.string().required().label(\"Password\"),\n  };\n  render() {\n    if (auth.getUser()) return <Redirect to='/' />;\n\n    const { data, error } = this.state;\n    const { history } = this.props;\n\n    return (\n      <div className='container'>\n        <h1 className='formStyle'>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.input(\"username\", \"Username\", data.username, error)}\n          {this.input(\"password\", \"Password\", data.password, error)}\n          {this.button(\"/movies\", \"Login\", history)}\n        </form>\n      </div>\n    );\n  }\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await auth.login(data);\n      let { state } = this.props.location;\n      window.location = state ? state.from.pathname : \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response === 400) {\n        let error = { ...this.state.error };\n        error.username = ex.response;\n        this.setState({ error });\n      }\n    }\n  };\n}\n\nexport default LoginForm;\n","/** @format */\n\nimport { Component } from \"react\";\nimport auth from \"../services/authServicePlus\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    auth.logout();\n    window.location = \"/\";\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","/** @format */\nimport config from \"../config.json\";\nimport http from \"./http\";\n\nexport function register(user) {\n  return http.post(`${config.apiEndpoint}/users`, {\n    email: user.username,\n    password: user.password,\n    name: user.name,\n  });\n}\n","/** @format */\n\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"../common/form\";\nimport * as userService from \"../services/userService\";\nimport auth from \"../services/authServicePlus\";\nimport \"../utils/form.css\";\n\nclass Register extends Form {\n  state = {\n    data: { username: \"\", password: \"\", name: \"\" },\n    error: {},\n  };\n  schema = {\n    username: Joi.string().required().label(\"Username\").email(),\n    password: Joi.string().required().label(\"Password\").min(5),\n    name: Joi.string().required().label(\"Name\"),\n  };\n  render() {\n    const { data, error } = this.state;\n    const { history } = this.props;\n    return (\n      <div className='container'>\n        <h1 className='formStyle'>Register</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          {this.input(\"username\", \"Username\", data.username, error)}\n          {this.input(\"password\", \"Password\", data.password, error)}\n          {this.input(\"name\", \"Name\", data.name, error)}\n          {this.button(\"/movies\", \"Register\", history)}\n        </form>\n      </div>\n    );\n  }\n  doSubmit = async () => {\n    try {\n      const response = await userService.register(this.state.data);\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response === 400) {\n        const error = { ...this.state.error };\n        error.username = ex.response.data;\n        this.setState({ error });\n      }\n      console.log(this.state.error);\n    }\n  };\n}\n\nexport default Register;\n","/** @format */\n\nimport React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"../services/authServicePlus\";\n\nclass ProtectedRoutes extends Component {\n  render() {\n    const user = auth.getUser();\n    let { path, component: Component, render, ...rest } = this.props;\n    return (\n      <React.Fragment>\n        <Route\n          path={path}\n          {...rest}\n          render={(props) => {\n            if (user) {\n              return Component ? <Component {...props} /> : render(props);\n            }\n            return (\n              <Redirect\n                to={{\n                  pathname: \"/login\",\n                  state: { from: props.location },\n                }}\n              />\n            );\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n}\nexport default ProtectedRoutes;\n","/** @format */\n\nimport React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"../common/movie\";\nimport Navbar from \"./navbar\";\nimport Customer from \"./customers\";\nimport Rental from \"./rentals\";\nimport MovieDetails from \"../common/details\";\nimport NoFound from \"./noFound\";\nimport LoginForm from \"./loginForm\";\nimport Logout from \"./logout\";\nimport Register from \"./register\";\nimport ProtectedRoutes from \"./ProtectedRoutes\";\nimport auth from \"../services/authServicePlus\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass Home extends Component {\n  state = {};\n  componentDidMount() {\n    try {\n      const user = auth.getUser();\n      this.setState({ user });\n    } catch (ex) {}\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastContainer />\n        <Navbar user={this.state.user} />\n        <div>\n          <Switch>\n            <Route\n              path='/movies'\n              exact\n              render={(props) => <Movies {...props} user={this.state.user} />}\n            />\n            <ProtectedRoutes path={\"/movies/:id?\"} component={MovieDetails} />\n            <Route path='/customers' component={Customer} />\n            <Route path='/rentals' component={Rental} />\n            <Route path='/register' component={Register} />\n            <Route path='/login' render={(props) => <LoginForm {...props} />} />\n            <Route path='/logout' component={Logout} />\n            <Route path='/no-found' component={NoFound} />\n            <Redirect from='/' exact to='/movies' />\n            <Redirect to='/no-found' />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/home\";\nfunction App() {\n  return (\n    <div>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\n\nconsole.log(\"Kal-el\", process.env.REACT_APP_NAME);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}